<!-- Accept Team Member -->
<div class="container">

  <%= simple_form_for(@project, url: url_for(:controller => 'projects', :action => 'accept_team_member', id: @project.id))  do |f| %>
      <%= f.error_notification %>
      <%= hidden_field_tag :submitted_task_id, current_tab.task.id %>

      <div class="row">
        <div class="col-md-6">
          <h1>Accept Team Member</h1>
          <%= f.input :project_id, input_html: { value: @project.id }, as: :hidden %>

          <%= f.simple_fields_for :team_memberships, f.object.team_memberships.build do | builder | %>
              <%= builder.input :role_id, label: 'Available Team Roles',
                          collection: @project.available_roles,
                          label_method: :name, value_method: :id,
                          input_html: {
                                  id: 'accept_team_member_roles'
                          },
                          :include_blank => 'Select a Role',
                          required: true
              %>

              <%= builder.input :member_id, label: 'New Team Member',
                          collection: [], label_method: :name, value_method: :id,
                          input_html: {
                                  class: 'chosen-select',
                                  id: 'accept_team_member_users'
                          },
                          :include_blank => 'Select a Member to add..',
                          required: true
              %>

              <%= builder.input :percentage, label: " Percentage ",
                          input_html: {
                                  id: 'accept_team_member_percentage_input'
                          },
                          required: true
              %>
          <% end %>

          <%= select_date (Date.today.day == 1)? Date.today : Date.today + 1.month, prefix: :effective_date, start_year: Date.today.year, discard_day: true %><br /><br />

          <div>The date you would like this allocation agreement to take effect.</div><br />

          <h2>Revenue Note:</h2>
          <p>Revenue Split Percentages will not be changed with this form. If you need to change percentages, fill out a new Rev Split form. Default Pct:
            Book Manager: 20%; Project Manager: 4%; Editor: 7%; Designer: 4%; Proofreader: 2%.<br>
            <em>Percentages of all roles combined must add up to 70%.</em>
          </p>
          <%= f.submit "Submit" %>

        </div>

        <div class="col-md-6">
          <table class="table">
            <thead>
                <tr>
                  <th>Role</th>
                  <th>Member</th>
                  <th>Percentage Allocated</th>
                  <th>Suggested Percentage</th>
                </tr>
            </thead>
            <tbody>
                <% @project.team_allocations.each do | role | %>
                    <tr>
                      <td><%= role[:role_name] %></td>
                      <td><%= role[:member_name] %></td>
                      <td><%= role[:allocated_percentage] %> %</td>
                      <td><%= role[:suggested_percentage] %> %</td>
                    </tr>
                <% end %>
            </tbody>
            <tfoot>
                <tr>
                  <td colspan="2"><strong>Total</strong></td>
                  <td id="tableAllocatedTotal">
                    0%
                  </td>
                  <td id="tableSuggestedTotal">
                    <% total = 0
                       @project.team_allocations.map { |r| total += r[:suggested_percentage] }
                    %>
                    <%= total %>%
                  </td>
                </tr>
                <tr>
                  <td colspan="4">
                    <div class="progress">
                      <div id="accept_team_member_percentage_indicator" class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="30" aria-valuemax="100" style="width: 70%;">
                        <span>% Allocated</span>
                      </div>
                    </div>
                  </td>
                </tr>
            </tfoot>
          </table>
        </div>
    </div>

    <% end %>
</div>

<script>
    // Bind the Chosen helper to the select object
    $("#accept_team_member_users").chosen({width: '200px;'});

    // Set up our JS framework for this form
    var acceptForm = new Teamtrope.BuildTeam.AcceptMember(
            $('#accept_team_member_roles'),
            $('#accept_team_member_users'),
            $('#accept_team_member_percentage_input'),
            $('#accept_team_member_percentage_indicator')
    );

    var percentageCalculator = percentageCalculator || new Teamtrope.BuildTeam.AcceptMember.PercentageCalculator(
            $('#accept_team_member_percentage_input'),
            $('#accept_team_member_percentage_indicator'),
            $('#tableAllocatedTotal')
    );



    // Add team members first so we can filter them out of the list of available members
    acceptForm.addTeamMembers(<%= @project.team_memberships.map { |member|
        next if member.new_record?
        { role: member.role.normalized_name, id: member.member_id, name: member.member.name, percentage: member.percentage }
    }.to_json.html_safe %>);

    // Add our list of available members for the various roles
    acceptForm.addMembersToRole('book_managers', <%= User.with_role('book_manager').map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>);
    acceptForm.addMembersToRole('cover_designers', <%= User.with_role('cover_designer').map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>);
    acceptForm.addMembersToRole('editors', <%= User.with_role('editor').map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>);
    acceptForm.addMembersToRole('project_managers', <%= User.with_role('project_manager').map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>);
    acceptForm.addMembersToRole('proof_readers', <%= User.with_role('proof_reader').map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>);

    // The acceptForm reformats the members in an easier to digest format
    percentageCalculator.addTeamMembers(acceptForm.getTeamMembers());

    var maxPercent = parseFloat(<%= @project.project_type.team_total_percent %>);
    var remainingPercent = (maxPercent - parseFloat(percentageCalculator.calculateTotal()));

    <% @project.team_allocations.each do |r| %>
        acceptForm.addRoleDefinition('<%= r[:role_name] %>', '<%= r[:suggested_percentage] %>');
    <% end %>

    jQuery.validator.addMethod('acceptMemberPercentageValidation', function(value, element) {
        return (this.optional(element) || parseFloat(value) <= remainingPercent);
    }, jQuery.validator.format("You have exceed 70%. Please adjust the percents so they sum up accordingly."));

    $("#new_team_membership").validate({
        ignore: [],
        rules: {
            'team_membership[role_id]': {
                required: true
            },
            'team_membership[member_id]': {
                required: true
            },
            'team_membership[percentage]': {
                required: true,
                acceptMemberPercentageValidation: ''
            }
        }
    });

</script>
