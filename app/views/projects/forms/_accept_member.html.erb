<!-- Accept Team Member -->
<div class="container">

  <%= simple_form_for(@project, url: url_for(:controller => 'projects', :action => 'accept_team_member', id: @project.id), html: { id: 'new_team_membership' } ) do |f| %>
      <%= f.error_notification %>
      <%= hidden_field_tag :submitted_task_id, current_tab.task.id, id: 'accept_member_submitted_task_id' %>

      <div class="row">
        <div class="col-md-6">
          <h1>Accept Team Member</h1>
          <%= f.input :project_id, input_html: { value: @project.id }, as: :hidden %>

          <%= f.simple_fields_for :team_memberships, f.object.team_memberships.build do | builder | %>
              <%= builder.input :role_id, label: 'Available Team Roles',
                          collection: @project.available_roles,
                          label_method: :name, value_method: :id,
                          input_html: {
                                  id: 'accept_team_member_roles'
                          },
                          :include_blank => 'Select a Role',
                          required: true
              %>

              <%= builder.input :member_id, label: 'New Team Member',
                          collection: [], label_method: :name, value_method: :id,
                          input_html: {
                                  class: 'chosen-select',
                                  id: 'accept_team_member_users'
                          },
                          :include_blank => 'Select a Member to add..',
                          required: true
              %>

              <%= builder.input :percentage, label: " Percentage ",
                          input_html: {
                                  id: 'accept_team_member_percentage_input'
                          },
                          required: true
              %>
          <% end %>

          <%= select_date (Date.today.day == 1)? Date.today : Date.today + 1.month, prefix: :accept_member_effective_date, start_year: Date.today.year, discard_day: true %><br /><br />

          <div>The date you would like this allocation agreement to take effect.</div><br />

          <!-- Removed temporarily for Task 263 until we can come up with better verbiage
          <h2>Revenue Note:</h2>
          <p>Revenue Split Percentages will not be changed with this form. If you need to change percentages, fill out a new Rev Split form. Default Pct:
            Book Manager: 20%; Project Manager: 4%; Editor: 7%; Designer: 4%; Proofreader: 2%.<br>
            <em>Percentages of all roles combined must add up to 70%.</em>
          </p>
          -->
          <%= f.submit "Submit" %>

        </div>

        <div class="col-md-6">
          <%= render 'projects/forms/project_member_allocation_table' %>
        </div>
    </div>

    <% end %>
</div>

<script>
    // Bind the Chosen helper to the select object
    $("#accept_team_member_users").chosen({width: '200px;'});

    // Set up our JS framework for this form
    if(! Teamtrope.acceptForm) {
        Teamtrope.acceptForm = new Teamtrope.BuildTeam.AcceptMember(
                $('#accept_team_member_roles'),
                $('#accept_team_member_users'),
                $('#accept_team_member_percentage_input'),
                $('#accept_team_member_percentage_indicator')
        );
    }

    if(! Teamtrope.percentageCalculator) {
        Teamtrope.percentageCalculator = new Teamtrope.BuildTeam.AcceptMember.PercentageCalculator(
                        $('#accept_team_member_percentage_input'),
                        $('#accept_team_member_percentage_indicator'),
                        $('#tableAllocatedTotal')
                );
    }

    // Update the members in the select box
    Teamtrope.acceptForm.updateMemberSelect();

    // Add team members first so we can filter them out of the list of available members
    Teamtrope.acceptForm.addTeamMembers(<%= @project.team_memberships.map { |member|
        next if member.new_record?
        { role: member.role.name.normalize, id: member.member_id, name: member.member.name, percentage: member.percentage }
    }.to_json.html_safe %>);

    // Add our list of available members for the various roles
    <% @project.project_type.required_roles.each do |r| %>

      Teamtrope.acceptForm.addMembersToRole('<%= r.role.name.normalize.pluralize %>',
              <% if %w( advisor agent ).include?(r.role.name.normalize) %>
                <%= User.active_users_excluding_project(r.role, @project).to_json.html_safe %>
              <% else %>
                <% members =  User.with_role_excluding_project(r.role, @project) %>

                <% if r.role.name.normalize.include?('book_manager') %>
                  <% @project.authors.each do |author| %>
                      <% if author.member.roles.include?('self_managed_author')%>
                        <% members << {:id => author.member.id, :name => author.member.name }%>
                      <% end %>
                  <% end %>
                <% end %>

                <%= members.to_json.html_safe %>
              <% end %>
      );

    <% end %>

    // The Teamtrope.acceptForm reformats the members in an easier to digest format
    Teamtrope.percentageCalculator.addTeamMembers(Teamtrope.acceptForm.getTeamMembers());

    var maxPercent = parseFloat(<%= @project.project_type.team_total_percent %>);
    var remainingPercent = (maxPercent - parseFloat(Teamtrope.percentageCalculator.calculateTotal()));

    <% @project.team_allocations.each do |r| %>
      Teamtrope.acceptForm.addRoleDefinition(
        '<%= r[:role_name] %>',
        '<%= @project.suggested_allocation_by_name(r[:role_name]) %>'
      );
    <% end %>

    jQuery.validator.addMethod('acceptMemberPercentageValidation', function(value, element) {
        return (this.optional(element) || parseFloat(value) <= remainingPercent);
    }, jQuery.validator.format("You have exceed 70%. Please adjust the percents so they sum up accordingly."));

    $("#new_team_membership").validate({
        ignore: [],
        rules: {
            'project[team_memberships_attributes][0][role_id]': {
                required: true
            },
            'project[team_memberships_attributes][0][member_id]': {
                required: true
            },
            'project[team_memberships_attributes][0][percentage]': {
                required: true,
                acceptMemberPercentageValidation: ''
            }
        },
        messages: {
            'project[team_memberships_attributes][0][role_id]': 'You must select a role.',
            'project[team_memberships_attributes][0][member_id]': 'You must select a member.'
        }
    });

</script>
